//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace StudentAppWebsite.STUDENT_APP {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BooksServiceSoap", Namespace="http://tempuri.org/")]
    public partial class BooksService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Answers_InsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Answers_LoadAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Answers_LoadBy_UserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Answers_LoadBy_QuestionIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Answers_Delete_By_IdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsersInfo_Load_AllFriendsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvitationList_UpdateStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback Books_InsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Books_LoadAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Books_LoadBy_IdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Books_LoadBy_UserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Books_LoadBy_FilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback Books_Delete_By_IdOperationCompleted;
        
        private System.Threading.SendOrPostCallback NoteBooks_InsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback BooksRating_InsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback BooksRating_LoadAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback BooksRating_LoadBy_BookIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback BooksRating_LoadBy_UserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Countries_LoadAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback States_LoadBy_CountryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Cities_LoadBy_StateIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EntranceExam_LoadAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExamStream_LoadAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Subjects_LoadAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Streams_LoadAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Chapters_LoadAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Colleges_LoadAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Categories_LoadAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Topics_LoadAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Masters_InsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Subjects_LoadByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Subjects_LoadByStreamIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Chapter_LoadByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Institute_LoadByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Stream_LoadByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback StreamsLoadByCategoryIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Category_LoadByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvitationList_InsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvitationList_LoadBy_UserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Pages_InsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Pages_LoadBy_BookIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Pages_LoadBy_IdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Questions_InsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Questions_LoadBy_PageIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Questions_LoadBy_IdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsersInfo_InsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsersInfo_ForgotPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsersInfo_ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsersInfo_LoadBy_IdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsersInfo_LoadAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsersInfo_LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotificationByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetLoginStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchBooksByUsertextOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchBookByCatStrInsSubOperationCompleted;
        
        private System.Threading.SendOrPostCallback Message_LoadByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback FriendList_LoadByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback FriendRequestByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFriendByIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BooksService() {
            this.Url = global::StudentAppWebsite.Properties.Settings.Default.StudentAppWebsite_STUDENT_APP_BooksService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Answers_InsertUpdateCompletedEventHandler Answers_InsertUpdateCompleted;
        
        /// <remarks/>
        public event Answers_LoadAllCompletedEventHandler Answers_LoadAllCompleted;
        
        /// <remarks/>
        public event Answers_LoadBy_UserIdCompletedEventHandler Answers_LoadBy_UserIdCompleted;
        
        /// <remarks/>
        public event Answers_LoadBy_QuestionIdCompletedEventHandler Answers_LoadBy_QuestionIdCompleted;
        
        /// <remarks/>
        public event Answers_Delete_By_IdCompletedEventHandler Answers_Delete_By_IdCompleted;
        
        /// <remarks/>
        public event UsersInfo_Load_AllFriendsCompletedEventHandler UsersInfo_Load_AllFriendsCompleted;
        
        /// <remarks/>
        public event InvitationList_UpdateStatusCompletedEventHandler InvitationList_UpdateStatusCompleted;
        
        /// <remarks/>
        public event Books_InsertUpdateCompletedEventHandler Books_InsertUpdateCompleted;
        
        /// <remarks/>
        public event Books_LoadAllCompletedEventHandler Books_LoadAllCompleted;
        
        /// <remarks/>
        public event Books_LoadBy_IdCompletedEventHandler Books_LoadBy_IdCompleted;
        
        /// <remarks/>
        public event Books_LoadBy_UserIdCompletedEventHandler Books_LoadBy_UserIdCompleted;
        
        /// <remarks/>
        public event Books_LoadBy_FilterCompletedEventHandler Books_LoadBy_FilterCompleted;
        
        /// <remarks/>
        public event Books_Delete_By_IdCompletedEventHandler Books_Delete_By_IdCompleted;
        
        /// <remarks/>
        public event NoteBooks_InsertUpdateCompletedEventHandler NoteBooks_InsertUpdateCompleted;
        
        /// <remarks/>
        public event BooksRating_InsertUpdateCompletedEventHandler BooksRating_InsertUpdateCompleted;
        
        /// <remarks/>
        public event BooksRating_LoadAllCompletedEventHandler BooksRating_LoadAllCompleted;
        
        /// <remarks/>
        public event BooksRating_LoadBy_BookIdCompletedEventHandler BooksRating_LoadBy_BookIdCompleted;
        
        /// <remarks/>
        public event BooksRating_LoadBy_UserIdCompletedEventHandler BooksRating_LoadBy_UserIdCompleted;
        
        /// <remarks/>
        public event Countries_LoadAllCompletedEventHandler Countries_LoadAllCompleted;
        
        /// <remarks/>
        public event States_LoadBy_CountryIdCompletedEventHandler States_LoadBy_CountryIdCompleted;
        
        /// <remarks/>
        public event Cities_LoadBy_StateIdCompletedEventHandler Cities_LoadBy_StateIdCompleted;
        
        /// <remarks/>
        public event EntranceExam_LoadAllCompletedEventHandler EntranceExam_LoadAllCompleted;
        
        /// <remarks/>
        public event ExamStream_LoadAllCompletedEventHandler ExamStream_LoadAllCompleted;
        
        /// <remarks/>
        public event Subjects_LoadAllCompletedEventHandler Subjects_LoadAllCompleted;
        
        /// <remarks/>
        public event Streams_LoadAllCompletedEventHandler Streams_LoadAllCompleted;
        
        /// <remarks/>
        public event Chapters_LoadAllCompletedEventHandler Chapters_LoadAllCompleted;
        
        /// <remarks/>
        public event Colleges_LoadAllCompletedEventHandler Colleges_LoadAllCompleted;
        
        /// <remarks/>
        public event Categories_LoadAllCompletedEventHandler Categories_LoadAllCompleted;
        
        /// <remarks/>
        public event Topics_LoadAllCompletedEventHandler Topics_LoadAllCompleted;
        
        /// <remarks/>
        public event Masters_InsertUpdateCompletedEventHandler Masters_InsertUpdateCompleted;
        
        /// <remarks/>
        public event Subjects_LoadByIdCompletedEventHandler Subjects_LoadByIdCompleted;
        
        /// <remarks/>
        public event Subjects_LoadByStreamIdCompletedEventHandler Subjects_LoadByStreamIdCompleted;
        
        /// <remarks/>
        public event Chapter_LoadByIdCompletedEventHandler Chapter_LoadByIdCompleted;
        
        /// <remarks/>
        public event Institute_LoadByIdCompletedEventHandler Institute_LoadByIdCompleted;
        
        /// <remarks/>
        public event Stream_LoadByIdCompletedEventHandler Stream_LoadByIdCompleted;
        
        /// <remarks/>
        public event StreamsLoadByCategoryIDCompletedEventHandler StreamsLoadByCategoryIDCompleted;
        
        /// <remarks/>
        public event Category_LoadByIdCompletedEventHandler Category_LoadByIdCompleted;
        
        /// <remarks/>
        public event InvitationList_InsertUpdateCompletedEventHandler InvitationList_InsertUpdateCompleted;
        
        /// <remarks/>
        public event InvitationList_LoadBy_UserIdCompletedEventHandler InvitationList_LoadBy_UserIdCompleted;
        
        /// <remarks/>
        public event Pages_InsertUpdateCompletedEventHandler Pages_InsertUpdateCompleted;
        
        /// <remarks/>
        public event Pages_LoadBy_BookIdCompletedEventHandler Pages_LoadBy_BookIdCompleted;
        
        /// <remarks/>
        public event Pages_LoadBy_IdCompletedEventHandler Pages_LoadBy_IdCompleted;
        
        /// <remarks/>
        public event Questions_InsertUpdateCompletedEventHandler Questions_InsertUpdateCompleted;
        
        /// <remarks/>
        public event Questions_LoadBy_PageIdCompletedEventHandler Questions_LoadBy_PageIdCompleted;
        
        /// <remarks/>
        public event Questions_LoadBy_IdCompletedEventHandler Questions_LoadBy_IdCompleted;
        
        /// <remarks/>
        public event UsersInfo_InsertUpdateCompletedEventHandler UsersInfo_InsertUpdateCompleted;
        
        /// <remarks/>
        public event UsersInfo_ForgotPasswordCompletedEventHandler UsersInfo_ForgotPasswordCompleted;
        
        /// <remarks/>
        public event UsersInfo_ResetPasswordCompletedEventHandler UsersInfo_ResetPasswordCompleted;
        
        /// <remarks/>
        public event UsersInfo_LoadBy_IdCompletedEventHandler UsersInfo_LoadBy_IdCompleted;
        
        /// <remarks/>
        public event UsersInfo_LoadAllCompletedEventHandler UsersInfo_LoadAllCompleted;
        
        /// <remarks/>
        public event UsersInfo_LoginCompletedEventHandler UsersInfo_LoginCompleted;
        
        /// <remarks/>
        public event NotificationByUserIdCompletedEventHandler NotificationByUserIdCompleted;
        
        /// <remarks/>
        public event SetLoginStatusCompletedEventHandler SetLoginStatusCompleted;
        
        /// <remarks/>
        public event SearchBooksByUsertextCompletedEventHandler SearchBooksByUsertextCompleted;
        
        /// <remarks/>
        public event SearchBookByCatStrInsSubCompletedEventHandler SearchBookByCatStrInsSubCompleted;
        
        /// <remarks/>
        public event Message_LoadByUserIdCompletedEventHandler Message_LoadByUserIdCompleted;
        
        /// <remarks/>
        public event FriendList_LoadByUserIdCompletedEventHandler FriendList_LoadByUserIdCompleted;
        
        /// <remarks/>
        public event FriendRequestByUserIdCompletedEventHandler FriendRequestByUserIdCompleted;
        
        /// <remarks/>
        public event RemoveFriendByIdCompletedEventHandler RemoveFriendByIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Answers_InsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Answers_InsertUpdate(long Id, long QuestionId, string Answer, string AnswerImage, long UserId) {
            this.Invoke("Answers_InsertUpdate", new object[] {
                        Id,
                        QuestionId,
                        Answer,
                        AnswerImage,
                        UserId});
        }
        
        /// <remarks/>
        public void Answers_InsertUpdateAsync(long Id, long QuestionId, string Answer, string AnswerImage, long UserId) {
            this.Answers_InsertUpdateAsync(Id, QuestionId, Answer, AnswerImage, UserId, null);
        }
        
        /// <remarks/>
        public void Answers_InsertUpdateAsync(long Id, long QuestionId, string Answer, string AnswerImage, long UserId, object userState) {
            if ((this.Answers_InsertUpdateOperationCompleted == null)) {
                this.Answers_InsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnswers_InsertUpdateOperationCompleted);
            }
            this.InvokeAsync("Answers_InsertUpdate", new object[] {
                        Id,
                        QuestionId,
                        Answer,
                        AnswerImage,
                        UserId}, this.Answers_InsertUpdateOperationCompleted, userState);
        }
        
        private void OnAnswers_InsertUpdateOperationCompleted(object arg) {
            if ((this.Answers_InsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Answers_InsertUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Answers_LoadAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Answers_LoadAll() {
            this.Invoke("Answers_LoadAll", new object[0]);
        }
        
        /// <remarks/>
        public void Answers_LoadAllAsync() {
            this.Answers_LoadAllAsync(null);
        }
        
        /// <remarks/>
        public void Answers_LoadAllAsync(object userState) {
            if ((this.Answers_LoadAllOperationCompleted == null)) {
                this.Answers_LoadAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnswers_LoadAllOperationCompleted);
            }
            this.InvokeAsync("Answers_LoadAll", new object[0], this.Answers_LoadAllOperationCompleted, userState);
        }
        
        private void OnAnswers_LoadAllOperationCompleted(object arg) {
            if ((this.Answers_LoadAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Answers_LoadAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Answers_LoadBy_UserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Answers_LoadBy_UserId(long UserId) {
            this.Invoke("Answers_LoadBy_UserId", new object[] {
                        UserId});
        }
        
        /// <remarks/>
        public void Answers_LoadBy_UserIdAsync(long UserId) {
            this.Answers_LoadBy_UserIdAsync(UserId, null);
        }
        
        /// <remarks/>
        public void Answers_LoadBy_UserIdAsync(long UserId, object userState) {
            if ((this.Answers_LoadBy_UserIdOperationCompleted == null)) {
                this.Answers_LoadBy_UserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnswers_LoadBy_UserIdOperationCompleted);
            }
            this.InvokeAsync("Answers_LoadBy_UserId", new object[] {
                        UserId}, this.Answers_LoadBy_UserIdOperationCompleted, userState);
        }
        
        private void OnAnswers_LoadBy_UserIdOperationCompleted(object arg) {
            if ((this.Answers_LoadBy_UserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Answers_LoadBy_UserIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Answers_LoadBy_QuestionId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Answers_LoadBy_QuestionId(long QuestionId) {
            this.Invoke("Answers_LoadBy_QuestionId", new object[] {
                        QuestionId});
        }
        
        /// <remarks/>
        public void Answers_LoadBy_QuestionIdAsync(long QuestionId) {
            this.Answers_LoadBy_QuestionIdAsync(QuestionId, null);
        }
        
        /// <remarks/>
        public void Answers_LoadBy_QuestionIdAsync(long QuestionId, object userState) {
            if ((this.Answers_LoadBy_QuestionIdOperationCompleted == null)) {
                this.Answers_LoadBy_QuestionIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnswers_LoadBy_QuestionIdOperationCompleted);
            }
            this.InvokeAsync("Answers_LoadBy_QuestionId", new object[] {
                        QuestionId}, this.Answers_LoadBy_QuestionIdOperationCompleted, userState);
        }
        
        private void OnAnswers_LoadBy_QuestionIdOperationCompleted(object arg) {
            if ((this.Answers_LoadBy_QuestionIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Answers_LoadBy_QuestionIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Answers_Delete_By_Id", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Answers_Delete_By_Id(long Id) {
            this.Invoke("Answers_Delete_By_Id", new object[] {
                        Id});
        }
        
        /// <remarks/>
        public void Answers_Delete_By_IdAsync(long Id) {
            this.Answers_Delete_By_IdAsync(Id, null);
        }
        
        /// <remarks/>
        public void Answers_Delete_By_IdAsync(long Id, object userState) {
            if ((this.Answers_Delete_By_IdOperationCompleted == null)) {
                this.Answers_Delete_By_IdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnswers_Delete_By_IdOperationCompleted);
            }
            this.InvokeAsync("Answers_Delete_By_Id", new object[] {
                        Id}, this.Answers_Delete_By_IdOperationCompleted, userState);
        }
        
        private void OnAnswers_Delete_By_IdOperationCompleted(object arg) {
            if ((this.Answers_Delete_By_IdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Answers_Delete_By_IdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UsersInfo_Load_AllFriends", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UsersInfo_Load_AllFriends(int UserId, int offset, int limit) {
            this.Invoke("UsersInfo_Load_AllFriends", new object[] {
                        UserId,
                        offset,
                        limit});
        }
        
        /// <remarks/>
        public void UsersInfo_Load_AllFriendsAsync(int UserId, int offset, int limit) {
            this.UsersInfo_Load_AllFriendsAsync(UserId, offset, limit, null);
        }
        
        /// <remarks/>
        public void UsersInfo_Load_AllFriendsAsync(int UserId, int offset, int limit, object userState) {
            if ((this.UsersInfo_Load_AllFriendsOperationCompleted == null)) {
                this.UsersInfo_Load_AllFriendsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsersInfo_Load_AllFriendsOperationCompleted);
            }
            this.InvokeAsync("UsersInfo_Load_AllFriends", new object[] {
                        UserId,
                        offset,
                        limit}, this.UsersInfo_Load_AllFriendsOperationCompleted, userState);
        }
        
        private void OnUsersInfo_Load_AllFriendsOperationCompleted(object arg) {
            if ((this.UsersInfo_Load_AllFriendsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsersInfo_Load_AllFriendsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InvitationList_UpdateStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InvitationList_UpdateStatus(int Id, int requestStatus, int type) {
            this.Invoke("InvitationList_UpdateStatus", new object[] {
                        Id,
                        requestStatus,
                        type});
        }
        
        /// <remarks/>
        public void InvitationList_UpdateStatusAsync(int Id, int requestStatus, int type) {
            this.InvitationList_UpdateStatusAsync(Id, requestStatus, type, null);
        }
        
        /// <remarks/>
        public void InvitationList_UpdateStatusAsync(int Id, int requestStatus, int type, object userState) {
            if ((this.InvitationList_UpdateStatusOperationCompleted == null)) {
                this.InvitationList_UpdateStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvitationList_UpdateStatusOperationCompleted);
            }
            this.InvokeAsync("InvitationList_UpdateStatus", new object[] {
                        Id,
                        requestStatus,
                        type}, this.InvitationList_UpdateStatusOperationCompleted, userState);
        }
        
        private void OnInvitationList_UpdateStatusOperationCompleted(object arg) {
            if ((this.InvitationList_UpdateStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvitationList_UpdateStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Books_InsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Books_InsertUpdate(long Id, string BookTitle, string CoverPageImage, string BackPageImage, int ExamStreamId, int EntranceExamId, string StudentName, string TeachersName, int TotalPages, string BookType, int SubjectId, int ChapterId, long UserId) {
            this.Invoke("Books_InsertUpdate", new object[] {
                        Id,
                        BookTitle,
                        CoverPageImage,
                        BackPageImage,
                        ExamStreamId,
                        EntranceExamId,
                        StudentName,
                        TeachersName,
                        TotalPages,
                        BookType,
                        SubjectId,
                        ChapterId,
                        UserId});
        }
        
        /// <remarks/>
        public void Books_InsertUpdateAsync(long Id, string BookTitle, string CoverPageImage, string BackPageImage, int ExamStreamId, int EntranceExamId, string StudentName, string TeachersName, int TotalPages, string BookType, int SubjectId, int ChapterId, long UserId) {
            this.Books_InsertUpdateAsync(Id, BookTitle, CoverPageImage, BackPageImage, ExamStreamId, EntranceExamId, StudentName, TeachersName, TotalPages, BookType, SubjectId, ChapterId, UserId, null);
        }
        
        /// <remarks/>
        public void Books_InsertUpdateAsync(long Id, string BookTitle, string CoverPageImage, string BackPageImage, int ExamStreamId, int EntranceExamId, string StudentName, string TeachersName, int TotalPages, string BookType, int SubjectId, int ChapterId, long UserId, object userState) {
            if ((this.Books_InsertUpdateOperationCompleted == null)) {
                this.Books_InsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBooks_InsertUpdateOperationCompleted);
            }
            this.InvokeAsync("Books_InsertUpdate", new object[] {
                        Id,
                        BookTitle,
                        CoverPageImage,
                        BackPageImage,
                        ExamStreamId,
                        EntranceExamId,
                        StudentName,
                        TeachersName,
                        TotalPages,
                        BookType,
                        SubjectId,
                        ChapterId,
                        UserId}, this.Books_InsertUpdateOperationCompleted, userState);
        }
        
        private void OnBooks_InsertUpdateOperationCompleted(object arg) {
            if ((this.Books_InsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Books_InsertUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Books_LoadAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Books_LoadAll(int offset, int limit) {
            this.Invoke("Books_LoadAll", new object[] {
                        offset,
                        limit});
        }
        
        /// <remarks/>
        public void Books_LoadAllAsync(int offset, int limit) {
            this.Books_LoadAllAsync(offset, limit, null);
        }
        
        /// <remarks/>
        public void Books_LoadAllAsync(int offset, int limit, object userState) {
            if ((this.Books_LoadAllOperationCompleted == null)) {
                this.Books_LoadAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBooks_LoadAllOperationCompleted);
            }
            this.InvokeAsync("Books_LoadAll", new object[] {
                        offset,
                        limit}, this.Books_LoadAllOperationCompleted, userState);
        }
        
        private void OnBooks_LoadAllOperationCompleted(object arg) {
            if ((this.Books_LoadAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Books_LoadAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Books_LoadBy_Id", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Books_LoadBy_Id(long Id) {
            this.Invoke("Books_LoadBy_Id", new object[] {
                        Id});
        }
        
        /// <remarks/>
        public void Books_LoadBy_IdAsync(long Id) {
            this.Books_LoadBy_IdAsync(Id, null);
        }
        
        /// <remarks/>
        public void Books_LoadBy_IdAsync(long Id, object userState) {
            if ((this.Books_LoadBy_IdOperationCompleted == null)) {
                this.Books_LoadBy_IdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBooks_LoadBy_IdOperationCompleted);
            }
            this.InvokeAsync("Books_LoadBy_Id", new object[] {
                        Id}, this.Books_LoadBy_IdOperationCompleted, userState);
        }
        
        private void OnBooks_LoadBy_IdOperationCompleted(object arg) {
            if ((this.Books_LoadBy_IdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Books_LoadBy_IdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Books_LoadBy_UserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Books_LoadBy_UserId(long UserId) {
            this.Invoke("Books_LoadBy_UserId", new object[] {
                        UserId});
        }
        
        /// <remarks/>
        public void Books_LoadBy_UserIdAsync(long UserId) {
            this.Books_LoadBy_UserIdAsync(UserId, null);
        }
        
        /// <remarks/>
        public void Books_LoadBy_UserIdAsync(long UserId, object userState) {
            if ((this.Books_LoadBy_UserIdOperationCompleted == null)) {
                this.Books_LoadBy_UserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBooks_LoadBy_UserIdOperationCompleted);
            }
            this.InvokeAsync("Books_LoadBy_UserId", new object[] {
                        UserId}, this.Books_LoadBy_UserIdOperationCompleted, userState);
        }
        
        private void OnBooks_LoadBy_UserIdOperationCompleted(object arg) {
            if ((this.Books_LoadBy_UserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Books_LoadBy_UserIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Books_LoadBy_Filter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Books_LoadBy_Filter(int CountryId, int StateId, int StreamId, int EntranceExamId, int SubjectId, int ChapterId) {
            this.Invoke("Books_LoadBy_Filter", new object[] {
                        CountryId,
                        StateId,
                        StreamId,
                        EntranceExamId,
                        SubjectId,
                        ChapterId});
        }
        
        /// <remarks/>
        public void Books_LoadBy_FilterAsync(int CountryId, int StateId, int StreamId, int EntranceExamId, int SubjectId, int ChapterId) {
            this.Books_LoadBy_FilterAsync(CountryId, StateId, StreamId, EntranceExamId, SubjectId, ChapterId, null);
        }
        
        /// <remarks/>
        public void Books_LoadBy_FilterAsync(int CountryId, int StateId, int StreamId, int EntranceExamId, int SubjectId, int ChapterId, object userState) {
            if ((this.Books_LoadBy_FilterOperationCompleted == null)) {
                this.Books_LoadBy_FilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBooks_LoadBy_FilterOperationCompleted);
            }
            this.InvokeAsync("Books_LoadBy_Filter", new object[] {
                        CountryId,
                        StateId,
                        StreamId,
                        EntranceExamId,
                        SubjectId,
                        ChapterId}, this.Books_LoadBy_FilterOperationCompleted, userState);
        }
        
        private void OnBooks_LoadBy_FilterOperationCompleted(object arg) {
            if ((this.Books_LoadBy_FilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Books_LoadBy_FilterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Books_Delete_By_Id", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Books_Delete_By_Id(long Id) {
            this.Invoke("Books_Delete_By_Id", new object[] {
                        Id});
        }
        
        /// <remarks/>
        public void Books_Delete_By_IdAsync(long Id) {
            this.Books_Delete_By_IdAsync(Id, null);
        }
        
        /// <remarks/>
        public void Books_Delete_By_IdAsync(long Id, object userState) {
            if ((this.Books_Delete_By_IdOperationCompleted == null)) {
                this.Books_Delete_By_IdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBooks_Delete_By_IdOperationCompleted);
            }
            this.InvokeAsync("Books_Delete_By_Id", new object[] {
                        Id}, this.Books_Delete_By_IdOperationCompleted, userState);
        }
        
        private void OnBooks_Delete_By_IdOperationCompleted(object arg) {
            if ((this.Books_Delete_By_IdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Books_Delete_By_IdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NoteBooks_InsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NoteBooks_InsertUpdate(int Id, string ChapterName, string SubjectName, string TeachersName, string CollegeName, string CategoryName, string StreamName, System.DateTime Date, string BookType, string CardHolderName, string CardNumber, System.DateTime ExpiryDate, int UserId) {
            this.Invoke("NoteBooks_InsertUpdate", new object[] {
                        Id,
                        ChapterName,
                        SubjectName,
                        TeachersName,
                        CollegeName,
                        CategoryName,
                        StreamName,
                        Date,
                        BookType,
                        CardHolderName,
                        CardNumber,
                        ExpiryDate,
                        UserId});
        }
        
        /// <remarks/>
        public void NoteBooks_InsertUpdateAsync(int Id, string ChapterName, string SubjectName, string TeachersName, string CollegeName, string CategoryName, string StreamName, System.DateTime Date, string BookType, string CardHolderName, string CardNumber, System.DateTime ExpiryDate, int UserId) {
            this.NoteBooks_InsertUpdateAsync(Id, ChapterName, SubjectName, TeachersName, CollegeName, CategoryName, StreamName, Date, BookType, CardHolderName, CardNumber, ExpiryDate, UserId, null);
        }
        
        /// <remarks/>
        public void NoteBooks_InsertUpdateAsync(int Id, string ChapterName, string SubjectName, string TeachersName, string CollegeName, string CategoryName, string StreamName, System.DateTime Date, string BookType, string CardHolderName, string CardNumber, System.DateTime ExpiryDate, int UserId, object userState) {
            if ((this.NoteBooks_InsertUpdateOperationCompleted == null)) {
                this.NoteBooks_InsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNoteBooks_InsertUpdateOperationCompleted);
            }
            this.InvokeAsync("NoteBooks_InsertUpdate", new object[] {
                        Id,
                        ChapterName,
                        SubjectName,
                        TeachersName,
                        CollegeName,
                        CategoryName,
                        StreamName,
                        Date,
                        BookType,
                        CardHolderName,
                        CardNumber,
                        ExpiryDate,
                        UserId}, this.NoteBooks_InsertUpdateOperationCompleted, userState);
        }
        
        private void OnNoteBooks_InsertUpdateOperationCompleted(object arg) {
            if ((this.NoteBooks_InsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NoteBooks_InsertUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BooksRating_InsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BooksRating_InsertUpdate(long Id, long BookId, long UserId, float Rate, string Comment) {
            this.Invoke("BooksRating_InsertUpdate", new object[] {
                        Id,
                        BookId,
                        UserId,
                        Rate,
                        Comment});
        }
        
        /// <remarks/>
        public void BooksRating_InsertUpdateAsync(long Id, long BookId, long UserId, float Rate, string Comment) {
            this.BooksRating_InsertUpdateAsync(Id, BookId, UserId, Rate, Comment, null);
        }
        
        /// <remarks/>
        public void BooksRating_InsertUpdateAsync(long Id, long BookId, long UserId, float Rate, string Comment, object userState) {
            if ((this.BooksRating_InsertUpdateOperationCompleted == null)) {
                this.BooksRating_InsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBooksRating_InsertUpdateOperationCompleted);
            }
            this.InvokeAsync("BooksRating_InsertUpdate", new object[] {
                        Id,
                        BookId,
                        UserId,
                        Rate,
                        Comment}, this.BooksRating_InsertUpdateOperationCompleted, userState);
        }
        
        private void OnBooksRating_InsertUpdateOperationCompleted(object arg) {
            if ((this.BooksRating_InsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BooksRating_InsertUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BooksRating_LoadAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BooksRating_LoadAll() {
            this.Invoke("BooksRating_LoadAll", new object[0]);
        }
        
        /// <remarks/>
        public void BooksRating_LoadAllAsync() {
            this.BooksRating_LoadAllAsync(null);
        }
        
        /// <remarks/>
        public void BooksRating_LoadAllAsync(object userState) {
            if ((this.BooksRating_LoadAllOperationCompleted == null)) {
                this.BooksRating_LoadAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBooksRating_LoadAllOperationCompleted);
            }
            this.InvokeAsync("BooksRating_LoadAll", new object[0], this.BooksRating_LoadAllOperationCompleted, userState);
        }
        
        private void OnBooksRating_LoadAllOperationCompleted(object arg) {
            if ((this.BooksRating_LoadAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BooksRating_LoadAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BooksRating_LoadBy_BookId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BooksRating_LoadBy_BookId(long BookId) {
            this.Invoke("BooksRating_LoadBy_BookId", new object[] {
                        BookId});
        }
        
        /// <remarks/>
        public void BooksRating_LoadBy_BookIdAsync(long BookId) {
            this.BooksRating_LoadBy_BookIdAsync(BookId, null);
        }
        
        /// <remarks/>
        public void BooksRating_LoadBy_BookIdAsync(long BookId, object userState) {
            if ((this.BooksRating_LoadBy_BookIdOperationCompleted == null)) {
                this.BooksRating_LoadBy_BookIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBooksRating_LoadBy_BookIdOperationCompleted);
            }
            this.InvokeAsync("BooksRating_LoadBy_BookId", new object[] {
                        BookId}, this.BooksRating_LoadBy_BookIdOperationCompleted, userState);
        }
        
        private void OnBooksRating_LoadBy_BookIdOperationCompleted(object arg) {
            if ((this.BooksRating_LoadBy_BookIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BooksRating_LoadBy_BookIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BooksRating_LoadBy_UserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BooksRating_LoadBy_UserId(long UserId) {
            this.Invoke("BooksRating_LoadBy_UserId", new object[] {
                        UserId});
        }
        
        /// <remarks/>
        public void BooksRating_LoadBy_UserIdAsync(long UserId) {
            this.BooksRating_LoadBy_UserIdAsync(UserId, null);
        }
        
        /// <remarks/>
        public void BooksRating_LoadBy_UserIdAsync(long UserId, object userState) {
            if ((this.BooksRating_LoadBy_UserIdOperationCompleted == null)) {
                this.BooksRating_LoadBy_UserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBooksRating_LoadBy_UserIdOperationCompleted);
            }
            this.InvokeAsync("BooksRating_LoadBy_UserId", new object[] {
                        UserId}, this.BooksRating_LoadBy_UserIdOperationCompleted, userState);
        }
        
        private void OnBooksRating_LoadBy_UserIdOperationCompleted(object arg) {
            if ((this.BooksRating_LoadBy_UserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BooksRating_LoadBy_UserIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Countries_LoadAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Countries_LoadAll() {
            this.Invoke("Countries_LoadAll", new object[0]);
        }
        
        /// <remarks/>
        public void Countries_LoadAllAsync() {
            this.Countries_LoadAllAsync(null);
        }
        
        /// <remarks/>
        public void Countries_LoadAllAsync(object userState) {
            if ((this.Countries_LoadAllOperationCompleted == null)) {
                this.Countries_LoadAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountries_LoadAllOperationCompleted);
            }
            this.InvokeAsync("Countries_LoadAll", new object[0], this.Countries_LoadAllOperationCompleted, userState);
        }
        
        private void OnCountries_LoadAllOperationCompleted(object arg) {
            if ((this.Countries_LoadAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Countries_LoadAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/States_LoadBy_CountryId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void States_LoadBy_CountryId(int CountryId) {
            this.Invoke("States_LoadBy_CountryId", new object[] {
                        CountryId});
        }
        
        /// <remarks/>
        public void States_LoadBy_CountryIdAsync(int CountryId) {
            this.States_LoadBy_CountryIdAsync(CountryId, null);
        }
        
        /// <remarks/>
        public void States_LoadBy_CountryIdAsync(int CountryId, object userState) {
            if ((this.States_LoadBy_CountryIdOperationCompleted == null)) {
                this.States_LoadBy_CountryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStates_LoadBy_CountryIdOperationCompleted);
            }
            this.InvokeAsync("States_LoadBy_CountryId", new object[] {
                        CountryId}, this.States_LoadBy_CountryIdOperationCompleted, userState);
        }
        
        private void OnStates_LoadBy_CountryIdOperationCompleted(object arg) {
            if ((this.States_LoadBy_CountryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.States_LoadBy_CountryIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Cities_LoadBy_StateId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Cities_LoadBy_StateId(int StateId) {
            this.Invoke("Cities_LoadBy_StateId", new object[] {
                        StateId});
        }
        
        /// <remarks/>
        public void Cities_LoadBy_StateIdAsync(int StateId) {
            this.Cities_LoadBy_StateIdAsync(StateId, null);
        }
        
        /// <remarks/>
        public void Cities_LoadBy_StateIdAsync(int StateId, object userState) {
            if ((this.Cities_LoadBy_StateIdOperationCompleted == null)) {
                this.Cities_LoadBy_StateIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCities_LoadBy_StateIdOperationCompleted);
            }
            this.InvokeAsync("Cities_LoadBy_StateId", new object[] {
                        StateId}, this.Cities_LoadBy_StateIdOperationCompleted, userState);
        }
        
        private void OnCities_LoadBy_StateIdOperationCompleted(object arg) {
            if ((this.Cities_LoadBy_StateIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Cities_LoadBy_StateIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EntranceExam_LoadAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EntranceExam_LoadAll() {
            this.Invoke("EntranceExam_LoadAll", new object[0]);
        }
        
        /// <remarks/>
        public void EntranceExam_LoadAllAsync() {
            this.EntranceExam_LoadAllAsync(null);
        }
        
        /// <remarks/>
        public void EntranceExam_LoadAllAsync(object userState) {
            if ((this.EntranceExam_LoadAllOperationCompleted == null)) {
                this.EntranceExam_LoadAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEntranceExam_LoadAllOperationCompleted);
            }
            this.InvokeAsync("EntranceExam_LoadAll", new object[0], this.EntranceExam_LoadAllOperationCompleted, userState);
        }
        
        private void OnEntranceExam_LoadAllOperationCompleted(object arg) {
            if ((this.EntranceExam_LoadAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EntranceExam_LoadAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExamStream_LoadAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExamStream_LoadAll() {
            this.Invoke("ExamStream_LoadAll", new object[0]);
        }
        
        /// <remarks/>
        public void ExamStream_LoadAllAsync() {
            this.ExamStream_LoadAllAsync(null);
        }
        
        /// <remarks/>
        public void ExamStream_LoadAllAsync(object userState) {
            if ((this.ExamStream_LoadAllOperationCompleted == null)) {
                this.ExamStream_LoadAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExamStream_LoadAllOperationCompleted);
            }
            this.InvokeAsync("ExamStream_LoadAll", new object[0], this.ExamStream_LoadAllOperationCompleted, userState);
        }
        
        private void OnExamStream_LoadAllOperationCompleted(object arg) {
            if ((this.ExamStream_LoadAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExamStream_LoadAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Subjects_LoadAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Subjects_LoadAll() {
            this.Invoke("Subjects_LoadAll", new object[0]);
        }
        
        /// <remarks/>
        public void Subjects_LoadAllAsync() {
            this.Subjects_LoadAllAsync(null);
        }
        
        /// <remarks/>
        public void Subjects_LoadAllAsync(object userState) {
            if ((this.Subjects_LoadAllOperationCompleted == null)) {
                this.Subjects_LoadAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubjects_LoadAllOperationCompleted);
            }
            this.InvokeAsync("Subjects_LoadAll", new object[0], this.Subjects_LoadAllOperationCompleted, userState);
        }
        
        private void OnSubjects_LoadAllOperationCompleted(object arg) {
            if ((this.Subjects_LoadAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Subjects_LoadAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Streams_LoadAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Streams_LoadAll() {
            this.Invoke("Streams_LoadAll", new object[0]);
        }
        
        /// <remarks/>
        public void Streams_LoadAllAsync() {
            this.Streams_LoadAllAsync(null);
        }
        
        /// <remarks/>
        public void Streams_LoadAllAsync(object userState) {
            if ((this.Streams_LoadAllOperationCompleted == null)) {
                this.Streams_LoadAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStreams_LoadAllOperationCompleted);
            }
            this.InvokeAsync("Streams_LoadAll", new object[0], this.Streams_LoadAllOperationCompleted, userState);
        }
        
        private void OnStreams_LoadAllOperationCompleted(object arg) {
            if ((this.Streams_LoadAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Streams_LoadAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Chapters_LoadAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Chapters_LoadAll() {
            this.Invoke("Chapters_LoadAll", new object[0]);
        }
        
        /// <remarks/>
        public void Chapters_LoadAllAsync() {
            this.Chapters_LoadAllAsync(null);
        }
        
        /// <remarks/>
        public void Chapters_LoadAllAsync(object userState) {
            if ((this.Chapters_LoadAllOperationCompleted == null)) {
                this.Chapters_LoadAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChapters_LoadAllOperationCompleted);
            }
            this.InvokeAsync("Chapters_LoadAll", new object[0], this.Chapters_LoadAllOperationCompleted, userState);
        }
        
        private void OnChapters_LoadAllOperationCompleted(object arg) {
            if ((this.Chapters_LoadAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Chapters_LoadAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Colleges_LoadAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Colleges_LoadAll() {
            this.Invoke("Colleges_LoadAll", new object[0]);
        }
        
        /// <remarks/>
        public void Colleges_LoadAllAsync() {
            this.Colleges_LoadAllAsync(null);
        }
        
        /// <remarks/>
        public void Colleges_LoadAllAsync(object userState) {
            if ((this.Colleges_LoadAllOperationCompleted == null)) {
                this.Colleges_LoadAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnColleges_LoadAllOperationCompleted);
            }
            this.InvokeAsync("Colleges_LoadAll", new object[0], this.Colleges_LoadAllOperationCompleted, userState);
        }
        
        private void OnColleges_LoadAllOperationCompleted(object arg) {
            if ((this.Colleges_LoadAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Colleges_LoadAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Categories_LoadAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Categories_LoadAll() {
            this.Invoke("Categories_LoadAll", new object[0]);
        }
        
        /// <remarks/>
        public void Categories_LoadAllAsync() {
            this.Categories_LoadAllAsync(null);
        }
        
        /// <remarks/>
        public void Categories_LoadAllAsync(object userState) {
            if ((this.Categories_LoadAllOperationCompleted == null)) {
                this.Categories_LoadAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCategories_LoadAllOperationCompleted);
            }
            this.InvokeAsync("Categories_LoadAll", new object[0], this.Categories_LoadAllOperationCompleted, userState);
        }
        
        private void OnCategories_LoadAllOperationCompleted(object arg) {
            if ((this.Categories_LoadAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Categories_LoadAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Topics_LoadAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Topics_LoadAll() {
            this.Invoke("Topics_LoadAll", new object[0]);
        }
        
        /// <remarks/>
        public void Topics_LoadAllAsync() {
            this.Topics_LoadAllAsync(null);
        }
        
        /// <remarks/>
        public void Topics_LoadAllAsync(object userState) {
            if ((this.Topics_LoadAllOperationCompleted == null)) {
                this.Topics_LoadAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTopics_LoadAllOperationCompleted);
            }
            this.InvokeAsync("Topics_LoadAll", new object[0], this.Topics_LoadAllOperationCompleted, userState);
        }
        
        private void OnTopics_LoadAllOperationCompleted(object arg) {
            if ((this.Topics_LoadAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Topics_LoadAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Masters_InsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Masters_InsertUpdate(int Id, string Name, string Type) {
            this.Invoke("Masters_InsertUpdate", new object[] {
                        Id,
                        Name,
                        Type});
        }
        
        /// <remarks/>
        public void Masters_InsertUpdateAsync(int Id, string Name, string Type) {
            this.Masters_InsertUpdateAsync(Id, Name, Type, null);
        }
        
        /// <remarks/>
        public void Masters_InsertUpdateAsync(int Id, string Name, string Type, object userState) {
            if ((this.Masters_InsertUpdateOperationCompleted == null)) {
                this.Masters_InsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMasters_InsertUpdateOperationCompleted);
            }
            this.InvokeAsync("Masters_InsertUpdate", new object[] {
                        Id,
                        Name,
                        Type}, this.Masters_InsertUpdateOperationCompleted, userState);
        }
        
        private void OnMasters_InsertUpdateOperationCompleted(object arg) {
            if ((this.Masters_InsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Masters_InsertUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Subjects_LoadById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Subjects_LoadById(long id) {
            this.Invoke("Subjects_LoadById", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void Subjects_LoadByIdAsync(long id) {
            this.Subjects_LoadByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void Subjects_LoadByIdAsync(long id, object userState) {
            if ((this.Subjects_LoadByIdOperationCompleted == null)) {
                this.Subjects_LoadByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubjects_LoadByIdOperationCompleted);
            }
            this.InvokeAsync("Subjects_LoadById", new object[] {
                        id}, this.Subjects_LoadByIdOperationCompleted, userState);
        }
        
        private void OnSubjects_LoadByIdOperationCompleted(object arg) {
            if ((this.Subjects_LoadByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Subjects_LoadByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Subjects_LoadByStreamId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Subjects_LoadByStreamId(long id) {
            this.Invoke("Subjects_LoadByStreamId", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void Subjects_LoadByStreamIdAsync(long id) {
            this.Subjects_LoadByStreamIdAsync(id, null);
        }
        
        /// <remarks/>
        public void Subjects_LoadByStreamIdAsync(long id, object userState) {
            if ((this.Subjects_LoadByStreamIdOperationCompleted == null)) {
                this.Subjects_LoadByStreamIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubjects_LoadByStreamIdOperationCompleted);
            }
            this.InvokeAsync("Subjects_LoadByStreamId", new object[] {
                        id}, this.Subjects_LoadByStreamIdOperationCompleted, userState);
        }
        
        private void OnSubjects_LoadByStreamIdOperationCompleted(object arg) {
            if ((this.Subjects_LoadByStreamIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Subjects_LoadByStreamIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Chapter_LoadById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Chapter_LoadById(long id) {
            this.Invoke("Chapter_LoadById", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void Chapter_LoadByIdAsync(long id) {
            this.Chapter_LoadByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void Chapter_LoadByIdAsync(long id, object userState) {
            if ((this.Chapter_LoadByIdOperationCompleted == null)) {
                this.Chapter_LoadByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChapter_LoadByIdOperationCompleted);
            }
            this.InvokeAsync("Chapter_LoadById", new object[] {
                        id}, this.Chapter_LoadByIdOperationCompleted, userState);
        }
        
        private void OnChapter_LoadByIdOperationCompleted(object arg) {
            if ((this.Chapter_LoadByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Chapter_LoadByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Institute_LoadById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Institute_LoadById(long streamId, long categoryId) {
            this.Invoke("Institute_LoadById", new object[] {
                        streamId,
                        categoryId});
        }
        
        /// <remarks/>
        public void Institute_LoadByIdAsync(long streamId, long categoryId) {
            this.Institute_LoadByIdAsync(streamId, categoryId, null);
        }
        
        /// <remarks/>
        public void Institute_LoadByIdAsync(long streamId, long categoryId, object userState) {
            if ((this.Institute_LoadByIdOperationCompleted == null)) {
                this.Institute_LoadByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstitute_LoadByIdOperationCompleted);
            }
            this.InvokeAsync("Institute_LoadById", new object[] {
                        streamId,
                        categoryId}, this.Institute_LoadByIdOperationCompleted, userState);
        }
        
        private void OnInstitute_LoadByIdOperationCompleted(object arg) {
            if ((this.Institute_LoadByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Institute_LoadByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Stream_LoadById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Stream_LoadById(long id) {
            this.Invoke("Stream_LoadById", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void Stream_LoadByIdAsync(long id) {
            this.Stream_LoadByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void Stream_LoadByIdAsync(long id, object userState) {
            if ((this.Stream_LoadByIdOperationCompleted == null)) {
                this.Stream_LoadByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStream_LoadByIdOperationCompleted);
            }
            this.InvokeAsync("Stream_LoadById", new object[] {
                        id}, this.Stream_LoadByIdOperationCompleted, userState);
        }
        
        private void OnStream_LoadByIdOperationCompleted(object arg) {
            if ((this.Stream_LoadByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Stream_LoadByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StreamsLoadByCategoryID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StreamsLoadByCategoryID(long id) {
            this.Invoke("StreamsLoadByCategoryID", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void StreamsLoadByCategoryIDAsync(long id) {
            this.StreamsLoadByCategoryIDAsync(id, null);
        }
        
        /// <remarks/>
        public void StreamsLoadByCategoryIDAsync(long id, object userState) {
            if ((this.StreamsLoadByCategoryIDOperationCompleted == null)) {
                this.StreamsLoadByCategoryIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStreamsLoadByCategoryIDOperationCompleted);
            }
            this.InvokeAsync("StreamsLoadByCategoryID", new object[] {
                        id}, this.StreamsLoadByCategoryIDOperationCompleted, userState);
        }
        
        private void OnStreamsLoadByCategoryIDOperationCompleted(object arg) {
            if ((this.StreamsLoadByCategoryIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StreamsLoadByCategoryIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Category_LoadById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Category_LoadById(long id) {
            this.Invoke("Category_LoadById", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void Category_LoadByIdAsync(long id) {
            this.Category_LoadByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void Category_LoadByIdAsync(long id, object userState) {
            if ((this.Category_LoadByIdOperationCompleted == null)) {
                this.Category_LoadByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCategory_LoadByIdOperationCompleted);
            }
            this.InvokeAsync("Category_LoadById", new object[] {
                        id}, this.Category_LoadByIdOperationCompleted, userState);
        }
        
        private void OnCategory_LoadByIdOperationCompleted(object arg) {
            if ((this.Category_LoadByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Category_LoadByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InvitationList_InsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InvitationList_InsertUpdate(int UserId, int InvitedUserId, int pageId) {
            this.Invoke("InvitationList_InsertUpdate", new object[] {
                        UserId,
                        InvitedUserId,
                        pageId});
        }
        
        /// <remarks/>
        public void InvitationList_InsertUpdateAsync(int UserId, int InvitedUserId, int pageId) {
            this.InvitationList_InsertUpdateAsync(UserId, InvitedUserId, pageId, null);
        }
        
        /// <remarks/>
        public void InvitationList_InsertUpdateAsync(int UserId, int InvitedUserId, int pageId, object userState) {
            if ((this.InvitationList_InsertUpdateOperationCompleted == null)) {
                this.InvitationList_InsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvitationList_InsertUpdateOperationCompleted);
            }
            this.InvokeAsync("InvitationList_InsertUpdate", new object[] {
                        UserId,
                        InvitedUserId,
                        pageId}, this.InvitationList_InsertUpdateOperationCompleted, userState);
        }
        
        private void OnInvitationList_InsertUpdateOperationCompleted(object arg) {
            if ((this.InvitationList_InsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvitationList_InsertUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InvitationList_LoadBy_UserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InvitationList_LoadBy_UserId(int UserId, int offset, int limit) {
            this.Invoke("InvitationList_LoadBy_UserId", new object[] {
                        UserId,
                        offset,
                        limit});
        }
        
        /// <remarks/>
        public void InvitationList_LoadBy_UserIdAsync(int UserId, int offset, int limit) {
            this.InvitationList_LoadBy_UserIdAsync(UserId, offset, limit, null);
        }
        
        /// <remarks/>
        public void InvitationList_LoadBy_UserIdAsync(int UserId, int offset, int limit, object userState) {
            if ((this.InvitationList_LoadBy_UserIdOperationCompleted == null)) {
                this.InvitationList_LoadBy_UserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvitationList_LoadBy_UserIdOperationCompleted);
            }
            this.InvokeAsync("InvitationList_LoadBy_UserId", new object[] {
                        UserId,
                        offset,
                        limit}, this.InvitationList_LoadBy_UserIdOperationCompleted, userState);
        }
        
        private void OnInvitationList_LoadBy_UserIdOperationCompleted(object arg) {
            if ((this.InvitationList_LoadBy_UserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvitationList_LoadBy_UserIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Pages_InsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Pages_InsertUpdate(long Id, long BookId, string PageImage, string PageTitle, int DisplayOrder, string ChapterName) {
            this.Invoke("Pages_InsertUpdate", new object[] {
                        Id,
                        BookId,
                        PageImage,
                        PageTitle,
                        DisplayOrder,
                        ChapterName});
        }
        
        /// <remarks/>
        public void Pages_InsertUpdateAsync(long Id, long BookId, string PageImage, string PageTitle, int DisplayOrder, string ChapterName) {
            this.Pages_InsertUpdateAsync(Id, BookId, PageImage, PageTitle, DisplayOrder, ChapterName, null);
        }
        
        /// <remarks/>
        public void Pages_InsertUpdateAsync(long Id, long BookId, string PageImage, string PageTitle, int DisplayOrder, string ChapterName, object userState) {
            if ((this.Pages_InsertUpdateOperationCompleted == null)) {
                this.Pages_InsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPages_InsertUpdateOperationCompleted);
            }
            this.InvokeAsync("Pages_InsertUpdate", new object[] {
                        Id,
                        BookId,
                        PageImage,
                        PageTitle,
                        DisplayOrder,
                        ChapterName}, this.Pages_InsertUpdateOperationCompleted, userState);
        }
        
        private void OnPages_InsertUpdateOperationCompleted(object arg) {
            if ((this.Pages_InsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Pages_InsertUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Pages_LoadBy_BookId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Pages_LoadBy_BookId(long BookId) {
            this.Invoke("Pages_LoadBy_BookId", new object[] {
                        BookId});
        }
        
        /// <remarks/>
        public void Pages_LoadBy_BookIdAsync(long BookId) {
            this.Pages_LoadBy_BookIdAsync(BookId, null);
        }
        
        /// <remarks/>
        public void Pages_LoadBy_BookIdAsync(long BookId, object userState) {
            if ((this.Pages_LoadBy_BookIdOperationCompleted == null)) {
                this.Pages_LoadBy_BookIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPages_LoadBy_BookIdOperationCompleted);
            }
            this.InvokeAsync("Pages_LoadBy_BookId", new object[] {
                        BookId}, this.Pages_LoadBy_BookIdOperationCompleted, userState);
        }
        
        private void OnPages_LoadBy_BookIdOperationCompleted(object arg) {
            if ((this.Pages_LoadBy_BookIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Pages_LoadBy_BookIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Pages_LoadBy_Id", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Pages_LoadBy_Id(long Id) {
            this.Invoke("Pages_LoadBy_Id", new object[] {
                        Id});
        }
        
        /// <remarks/>
        public void Pages_LoadBy_IdAsync(long Id) {
            this.Pages_LoadBy_IdAsync(Id, null);
        }
        
        /// <remarks/>
        public void Pages_LoadBy_IdAsync(long Id, object userState) {
            if ((this.Pages_LoadBy_IdOperationCompleted == null)) {
                this.Pages_LoadBy_IdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPages_LoadBy_IdOperationCompleted);
            }
            this.InvokeAsync("Pages_LoadBy_Id", new object[] {
                        Id}, this.Pages_LoadBy_IdOperationCompleted, userState);
        }
        
        private void OnPages_LoadBy_IdOperationCompleted(object arg) {
            if ((this.Pages_LoadBy_IdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Pages_LoadBy_IdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Questions_InsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Questions_InsertUpdate(long Id, long PageId, string QuestionTitle, string QuestionImage, long UserId) {
            this.Invoke("Questions_InsertUpdate", new object[] {
                        Id,
                        PageId,
                        QuestionTitle,
                        QuestionImage,
                        UserId});
        }
        
        /// <remarks/>
        public void Questions_InsertUpdateAsync(long Id, long PageId, string QuestionTitle, string QuestionImage, long UserId) {
            this.Questions_InsertUpdateAsync(Id, PageId, QuestionTitle, QuestionImage, UserId, null);
        }
        
        /// <remarks/>
        public void Questions_InsertUpdateAsync(long Id, long PageId, string QuestionTitle, string QuestionImage, long UserId, object userState) {
            if ((this.Questions_InsertUpdateOperationCompleted == null)) {
                this.Questions_InsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuestions_InsertUpdateOperationCompleted);
            }
            this.InvokeAsync("Questions_InsertUpdate", new object[] {
                        Id,
                        PageId,
                        QuestionTitle,
                        QuestionImage,
                        UserId}, this.Questions_InsertUpdateOperationCompleted, userState);
        }
        
        private void OnQuestions_InsertUpdateOperationCompleted(object arg) {
            if ((this.Questions_InsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Questions_InsertUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Questions_LoadBy_PageId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Questions_LoadBy_PageId(long PageId) {
            this.Invoke("Questions_LoadBy_PageId", new object[] {
                        PageId});
        }
        
        /// <remarks/>
        public void Questions_LoadBy_PageIdAsync(long PageId) {
            this.Questions_LoadBy_PageIdAsync(PageId, null);
        }
        
        /// <remarks/>
        public void Questions_LoadBy_PageIdAsync(long PageId, object userState) {
            if ((this.Questions_LoadBy_PageIdOperationCompleted == null)) {
                this.Questions_LoadBy_PageIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuestions_LoadBy_PageIdOperationCompleted);
            }
            this.InvokeAsync("Questions_LoadBy_PageId", new object[] {
                        PageId}, this.Questions_LoadBy_PageIdOperationCompleted, userState);
        }
        
        private void OnQuestions_LoadBy_PageIdOperationCompleted(object arg) {
            if ((this.Questions_LoadBy_PageIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Questions_LoadBy_PageIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Questions_LoadBy_Id", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Questions_LoadBy_Id(long Id) {
            this.Invoke("Questions_LoadBy_Id", new object[] {
                        Id});
        }
        
        /// <remarks/>
        public void Questions_LoadBy_IdAsync(long Id) {
            this.Questions_LoadBy_IdAsync(Id, null);
        }
        
        /// <remarks/>
        public void Questions_LoadBy_IdAsync(long Id, object userState) {
            if ((this.Questions_LoadBy_IdOperationCompleted == null)) {
                this.Questions_LoadBy_IdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuestions_LoadBy_IdOperationCompleted);
            }
            this.InvokeAsync("Questions_LoadBy_Id", new object[] {
                        Id}, this.Questions_LoadBy_IdOperationCompleted, userState);
        }
        
        private void OnQuestions_LoadBy_IdOperationCompleted(object arg) {
            if ((this.Questions_LoadBy_IdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Questions_LoadBy_IdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UsersInfo_InsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UsersInfo_InsertUpdate(
                    long Id, 
                    int UserRole, 
                    string StudentName, 
                    string ProfileImage, 
                    string TeachersName, 
                    int ChapterId, 
                    int SubjectId, 
                    int CollegeId, 
                    int TopicId, 
                    int EntranceExamId, 
                    int ExamStreamId, 
                    int StreamId, 
                    int CategoryId, 
                    int CountryId, 
                    int StateId, 
                    int CityId, 
                    string NoteBooksFrontCoverImage, 
                    string Date, 
                    string ATMNumber, 
                    string NameOnATMCard, 
                    string MobileNumber, 
                    string EmailId, 
                    string Password, 
                    bool IsActive) {
            this.Invoke("UsersInfo_InsertUpdate", new object[] {
                        Id,
                        UserRole,
                        StudentName,
                        ProfileImage,
                        TeachersName,
                        ChapterId,
                        SubjectId,
                        CollegeId,
                        TopicId,
                        EntranceExamId,
                        ExamStreamId,
                        StreamId,
                        CategoryId,
                        CountryId,
                        StateId,
                        CityId,
                        NoteBooksFrontCoverImage,
                        Date,
                        ATMNumber,
                        NameOnATMCard,
                        MobileNumber,
                        EmailId,
                        Password,
                        IsActive});
        }
        
        /// <remarks/>
        public void UsersInfo_InsertUpdateAsync(
                    long Id, 
                    int UserRole, 
                    string StudentName, 
                    string ProfileImage, 
                    string TeachersName, 
                    int ChapterId, 
                    int SubjectId, 
                    int CollegeId, 
                    int TopicId, 
                    int EntranceExamId, 
                    int ExamStreamId, 
                    int StreamId, 
                    int CategoryId, 
                    int CountryId, 
                    int StateId, 
                    int CityId, 
                    string NoteBooksFrontCoverImage, 
                    string Date, 
                    string ATMNumber, 
                    string NameOnATMCard, 
                    string MobileNumber, 
                    string EmailId, 
                    string Password, 
                    bool IsActive) {
            this.UsersInfo_InsertUpdateAsync(Id, UserRole, StudentName, ProfileImage, TeachersName, ChapterId, SubjectId, CollegeId, TopicId, EntranceExamId, ExamStreamId, StreamId, CategoryId, CountryId, StateId, CityId, NoteBooksFrontCoverImage, Date, ATMNumber, NameOnATMCard, MobileNumber, EmailId, Password, IsActive, null);
        }
        
        /// <remarks/>
        public void UsersInfo_InsertUpdateAsync(
                    long Id, 
                    int UserRole, 
                    string StudentName, 
                    string ProfileImage, 
                    string TeachersName, 
                    int ChapterId, 
                    int SubjectId, 
                    int CollegeId, 
                    int TopicId, 
                    int EntranceExamId, 
                    int ExamStreamId, 
                    int StreamId, 
                    int CategoryId, 
                    int CountryId, 
                    int StateId, 
                    int CityId, 
                    string NoteBooksFrontCoverImage, 
                    string Date, 
                    string ATMNumber, 
                    string NameOnATMCard, 
                    string MobileNumber, 
                    string EmailId, 
                    string Password, 
                    bool IsActive, 
                    object userState) {
            if ((this.UsersInfo_InsertUpdateOperationCompleted == null)) {
                this.UsersInfo_InsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsersInfo_InsertUpdateOperationCompleted);
            }
            this.InvokeAsync("UsersInfo_InsertUpdate", new object[] {
                        Id,
                        UserRole,
                        StudentName,
                        ProfileImage,
                        TeachersName,
                        ChapterId,
                        SubjectId,
                        CollegeId,
                        TopicId,
                        EntranceExamId,
                        ExamStreamId,
                        StreamId,
                        CategoryId,
                        CountryId,
                        StateId,
                        CityId,
                        NoteBooksFrontCoverImage,
                        Date,
                        ATMNumber,
                        NameOnATMCard,
                        MobileNumber,
                        EmailId,
                        Password,
                        IsActive}, this.UsersInfo_InsertUpdateOperationCompleted, userState);
        }
        
        private void OnUsersInfo_InsertUpdateOperationCompleted(object arg) {
            if ((this.UsersInfo_InsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsersInfo_InsertUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UsersInfo_ForgotPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UsersInfo_ForgotPassword(string EmailId, string PasswordResetToken) {
            this.Invoke("UsersInfo_ForgotPassword", new object[] {
                        EmailId,
                        PasswordResetToken});
        }
        
        /// <remarks/>
        public void UsersInfo_ForgotPasswordAsync(string EmailId, string PasswordResetToken) {
            this.UsersInfo_ForgotPasswordAsync(EmailId, PasswordResetToken, null);
        }
        
        /// <remarks/>
        public void UsersInfo_ForgotPasswordAsync(string EmailId, string PasswordResetToken, object userState) {
            if ((this.UsersInfo_ForgotPasswordOperationCompleted == null)) {
                this.UsersInfo_ForgotPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsersInfo_ForgotPasswordOperationCompleted);
            }
            this.InvokeAsync("UsersInfo_ForgotPassword", new object[] {
                        EmailId,
                        PasswordResetToken}, this.UsersInfo_ForgotPasswordOperationCompleted, userState);
        }
        
        private void OnUsersInfo_ForgotPasswordOperationCompleted(object arg) {
            if ((this.UsersInfo_ForgotPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsersInfo_ForgotPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UsersInfo_ResetPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UsersInfo_ResetPassword(string PasswordResetToken, string Password) {
            this.Invoke("UsersInfo_ResetPassword", new object[] {
                        PasswordResetToken,
                        Password});
        }
        
        /// <remarks/>
        public void UsersInfo_ResetPasswordAsync(string PasswordResetToken, string Password) {
            this.UsersInfo_ResetPasswordAsync(PasswordResetToken, Password, null);
        }
        
        /// <remarks/>
        public void UsersInfo_ResetPasswordAsync(string PasswordResetToken, string Password, object userState) {
            if ((this.UsersInfo_ResetPasswordOperationCompleted == null)) {
                this.UsersInfo_ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsersInfo_ResetPasswordOperationCompleted);
            }
            this.InvokeAsync("UsersInfo_ResetPassword", new object[] {
                        PasswordResetToken,
                        Password}, this.UsersInfo_ResetPasswordOperationCompleted, userState);
        }
        
        private void OnUsersInfo_ResetPasswordOperationCompleted(object arg) {
            if ((this.UsersInfo_ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsersInfo_ResetPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UsersInfo_LoadBy_Id", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UsersInfo_LoadBy_Id(long Id) {
            this.Invoke("UsersInfo_LoadBy_Id", new object[] {
                        Id});
        }
        
        /// <remarks/>
        public void UsersInfo_LoadBy_IdAsync(long Id) {
            this.UsersInfo_LoadBy_IdAsync(Id, null);
        }
        
        /// <remarks/>
        public void UsersInfo_LoadBy_IdAsync(long Id, object userState) {
            if ((this.UsersInfo_LoadBy_IdOperationCompleted == null)) {
                this.UsersInfo_LoadBy_IdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsersInfo_LoadBy_IdOperationCompleted);
            }
            this.InvokeAsync("UsersInfo_LoadBy_Id", new object[] {
                        Id}, this.UsersInfo_LoadBy_IdOperationCompleted, userState);
        }
        
        private void OnUsersInfo_LoadBy_IdOperationCompleted(object arg) {
            if ((this.UsersInfo_LoadBy_IdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsersInfo_LoadBy_IdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UsersInfo_LoadAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UsersInfo_LoadAll() {
            this.Invoke("UsersInfo_LoadAll", new object[0]);
        }
        
        /// <remarks/>
        public void UsersInfo_LoadAllAsync() {
            this.UsersInfo_LoadAllAsync(null);
        }
        
        /// <remarks/>
        public void UsersInfo_LoadAllAsync(object userState) {
            if ((this.UsersInfo_LoadAllOperationCompleted == null)) {
                this.UsersInfo_LoadAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsersInfo_LoadAllOperationCompleted);
            }
            this.InvokeAsync("UsersInfo_LoadAll", new object[0], this.UsersInfo_LoadAllOperationCompleted, userState);
        }
        
        private void OnUsersInfo_LoadAllOperationCompleted(object arg) {
            if ((this.UsersInfo_LoadAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsersInfo_LoadAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UsersInfo_Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UsersInfo_Login(string EmailId, string Password) {
            this.Invoke("UsersInfo_Login", new object[] {
                        EmailId,
                        Password});
        }
        
        /// <remarks/>
        public void UsersInfo_LoginAsync(string EmailId, string Password) {
            this.UsersInfo_LoginAsync(EmailId, Password, null);
        }
        
        /// <remarks/>
        public void UsersInfo_LoginAsync(string EmailId, string Password, object userState) {
            if ((this.UsersInfo_LoginOperationCompleted == null)) {
                this.UsersInfo_LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsersInfo_LoginOperationCompleted);
            }
            this.InvokeAsync("UsersInfo_Login", new object[] {
                        EmailId,
                        Password}, this.UsersInfo_LoginOperationCompleted, userState);
        }
        
        private void OnUsersInfo_LoginOperationCompleted(object arg) {
            if ((this.UsersInfo_LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsersInfo_LoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotificationByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotificationByUserId(int Id, int offset, int limit) {
            this.Invoke("NotificationByUserId", new object[] {
                        Id,
                        offset,
                        limit});
        }
        
        /// <remarks/>
        public void NotificationByUserIdAsync(int Id, int offset, int limit) {
            this.NotificationByUserIdAsync(Id, offset, limit, null);
        }
        
        /// <remarks/>
        public void NotificationByUserIdAsync(int Id, int offset, int limit, object userState) {
            if ((this.NotificationByUserIdOperationCompleted == null)) {
                this.NotificationByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotificationByUserIdOperationCompleted);
            }
            this.InvokeAsync("NotificationByUserId", new object[] {
                        Id,
                        offset,
                        limit}, this.NotificationByUserIdOperationCompleted, userState);
        }
        
        private void OnNotificationByUserIdOperationCompleted(object arg) {
            if ((this.NotificationByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotificationByUserIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetLoginStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetLoginStatus(long Id) {
            this.Invoke("SetLoginStatus", new object[] {
                        Id});
        }
        
        /// <remarks/>
        public void SetLoginStatusAsync(long Id) {
            this.SetLoginStatusAsync(Id, null);
        }
        
        /// <remarks/>
        public void SetLoginStatusAsync(long Id, object userState) {
            if ((this.SetLoginStatusOperationCompleted == null)) {
                this.SetLoginStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLoginStatusOperationCompleted);
            }
            this.InvokeAsync("SetLoginStatus", new object[] {
                        Id}, this.SetLoginStatusOperationCompleted, userState);
        }
        
        private void OnSetLoginStatusOperationCompleted(object arg) {
            if ((this.SetLoginStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLoginStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchBooksByUsertext", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SearchBooksByUsertext(string Text, int offset, int limit) {
            this.Invoke("SearchBooksByUsertext", new object[] {
                        Text,
                        offset,
                        limit});
        }
        
        /// <remarks/>
        public void SearchBooksByUsertextAsync(string Text, int offset, int limit) {
            this.SearchBooksByUsertextAsync(Text, offset, limit, null);
        }
        
        /// <remarks/>
        public void SearchBooksByUsertextAsync(string Text, int offset, int limit, object userState) {
            if ((this.SearchBooksByUsertextOperationCompleted == null)) {
                this.SearchBooksByUsertextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchBooksByUsertextOperationCompleted);
            }
            this.InvokeAsync("SearchBooksByUsertext", new object[] {
                        Text,
                        offset,
                        limit}, this.SearchBooksByUsertextOperationCompleted, userState);
        }
        
        private void OnSearchBooksByUsertextOperationCompleted(object arg) {
            if ((this.SearchBooksByUsertextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchBooksByUsertextCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchBookByCatStrInsSub", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SearchBookByCatStrInsSub(int CategoryID, int StreamID, int InstituteID, string SubjectID, int PageNo) {
            this.Invoke("SearchBookByCatStrInsSub", new object[] {
                        CategoryID,
                        StreamID,
                        InstituteID,
                        SubjectID,
                        PageNo});
        }
        
        /// <remarks/>
        public void SearchBookByCatStrInsSubAsync(int CategoryID, int StreamID, int InstituteID, string SubjectID, int PageNo) {
            this.SearchBookByCatStrInsSubAsync(CategoryID, StreamID, InstituteID, SubjectID, PageNo, null);
        }
        
        /// <remarks/>
        public void SearchBookByCatStrInsSubAsync(int CategoryID, int StreamID, int InstituteID, string SubjectID, int PageNo, object userState) {
            if ((this.SearchBookByCatStrInsSubOperationCompleted == null)) {
                this.SearchBookByCatStrInsSubOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchBookByCatStrInsSubOperationCompleted);
            }
            this.InvokeAsync("SearchBookByCatStrInsSub", new object[] {
                        CategoryID,
                        StreamID,
                        InstituteID,
                        SubjectID,
                        PageNo}, this.SearchBookByCatStrInsSubOperationCompleted, userState);
        }
        
        private void OnSearchBookByCatStrInsSubOperationCompleted(object arg) {
            if ((this.SearchBookByCatStrInsSubCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchBookByCatStrInsSubCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Message_LoadByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Message_LoadByUserId(int UserId) {
            this.Invoke("Message_LoadByUserId", new object[] {
                        UserId});
        }
        
        /// <remarks/>
        public void Message_LoadByUserIdAsync(int UserId) {
            this.Message_LoadByUserIdAsync(UserId, null);
        }
        
        /// <remarks/>
        public void Message_LoadByUserIdAsync(int UserId, object userState) {
            if ((this.Message_LoadByUserIdOperationCompleted == null)) {
                this.Message_LoadByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMessage_LoadByUserIdOperationCompleted);
            }
            this.InvokeAsync("Message_LoadByUserId", new object[] {
                        UserId}, this.Message_LoadByUserIdOperationCompleted, userState);
        }
        
        private void OnMessage_LoadByUserIdOperationCompleted(object arg) {
            if ((this.Message_LoadByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Message_LoadByUserIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FriendList_LoadByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FriendList_LoadByUserId(int id) {
            this.Invoke("FriendList_LoadByUserId", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void FriendList_LoadByUserIdAsync(int id) {
            this.FriendList_LoadByUserIdAsync(id, null);
        }
        
        /// <remarks/>
        public void FriendList_LoadByUserIdAsync(int id, object userState) {
            if ((this.FriendList_LoadByUserIdOperationCompleted == null)) {
                this.FriendList_LoadByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFriendList_LoadByUserIdOperationCompleted);
            }
            this.InvokeAsync("FriendList_LoadByUserId", new object[] {
                        id}, this.FriendList_LoadByUserIdOperationCompleted, userState);
        }
        
        private void OnFriendList_LoadByUserIdOperationCompleted(object arg) {
            if ((this.FriendList_LoadByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FriendList_LoadByUserIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FriendRequestByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FriendRequestByUserId(int Id, int offset, int limit) {
            this.Invoke("FriendRequestByUserId", new object[] {
                        Id,
                        offset,
                        limit});
        }
        
        /// <remarks/>
        public void FriendRequestByUserIdAsync(int Id, int offset, int limit) {
            this.FriendRequestByUserIdAsync(Id, offset, limit, null);
        }
        
        /// <remarks/>
        public void FriendRequestByUserIdAsync(int Id, int offset, int limit, object userState) {
            if ((this.FriendRequestByUserIdOperationCompleted == null)) {
                this.FriendRequestByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFriendRequestByUserIdOperationCompleted);
            }
            this.InvokeAsync("FriendRequestByUserId", new object[] {
                        Id,
                        offset,
                        limit}, this.FriendRequestByUserIdOperationCompleted, userState);
        }
        
        private void OnFriendRequestByUserIdOperationCompleted(object arg) {
            if ((this.FriendRequestByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FriendRequestByUserIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveFriendById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveFriendById(int Id) {
            this.Invoke("RemoveFriendById", new object[] {
                        Id});
        }
        
        /// <remarks/>
        public void RemoveFriendByIdAsync(int Id) {
            this.RemoveFriendByIdAsync(Id, null);
        }
        
        /// <remarks/>
        public void RemoveFriendByIdAsync(int Id, object userState) {
            if ((this.RemoveFriendByIdOperationCompleted == null)) {
                this.RemoveFriendByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFriendByIdOperationCompleted);
            }
            this.InvokeAsync("RemoveFriendById", new object[] {
                        Id}, this.RemoveFriendByIdOperationCompleted, userState);
        }
        
        private void OnRemoveFriendByIdOperationCompleted(object arg) {
            if ((this.RemoveFriendByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFriendByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Answers_InsertUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Answers_LoadAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Answers_LoadBy_UserIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Answers_LoadBy_QuestionIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Answers_Delete_By_IdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UsersInfo_Load_AllFriendsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void InvitationList_UpdateStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Books_InsertUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Books_LoadAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Books_LoadBy_IdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Books_LoadBy_UserIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Books_LoadBy_FilterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Books_Delete_By_IdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void NoteBooks_InsertUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void BooksRating_InsertUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void BooksRating_LoadAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void BooksRating_LoadBy_BookIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void BooksRating_LoadBy_UserIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Countries_LoadAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void States_LoadBy_CountryIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Cities_LoadBy_StateIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void EntranceExam_LoadAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ExamStream_LoadAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Subjects_LoadAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Streams_LoadAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Chapters_LoadAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Colleges_LoadAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Categories_LoadAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Topics_LoadAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Masters_InsertUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Subjects_LoadByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Subjects_LoadByStreamIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Chapter_LoadByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Institute_LoadByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Stream_LoadByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void StreamsLoadByCategoryIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Category_LoadByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void InvitationList_InsertUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void InvitationList_LoadBy_UserIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Pages_InsertUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Pages_LoadBy_BookIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Pages_LoadBy_IdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Questions_InsertUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Questions_LoadBy_PageIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Questions_LoadBy_IdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UsersInfo_InsertUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UsersInfo_ForgotPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UsersInfo_ResetPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UsersInfo_LoadBy_IdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UsersInfo_LoadAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UsersInfo_LoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void NotificationByUserIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SetLoginStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SearchBooksByUsertextCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SearchBookByCatStrInsSubCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Message_LoadByUserIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void FriendList_LoadByUserIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void FriendRequestByUserIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void RemoveFriendByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591